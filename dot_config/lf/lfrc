set drawbox true
set icons true
set anchorfind false
set tabstop 4
#set globsearch true
set incsearch true
set incfilter true
#set shell zsh
set info size:time

# https://github.com/thimc/lfimg
set cleaner ~/.config/lf/cleaner
set previewer ~/.config/lf/previewer

# Delete Ã¼ber trash-cli
cmd trash ${{
    trash_dir=
    if command -v trash >/dev/null 2>&1; then
        del_cmd=(trash put)
    elif command -v trash-put >/dev/null 2>&1; then
        del_cmd=(trash-put)
    else
        del_cmd=(mv)
        trash_dir="$HOME/.local/share/Trash/mv@$(date +%Y%m%d%H)"
        mkdir -p "$trash_dir"
    fi

    for f in "$fx"; do
        if [[ -z $trash_dir ]]; then
            "${del_cmd[@]}" -- "$f"
        else
            "${del_cmd[@]}" -- "$f" "$trash_dir"
        fi
    done
}}

map DD :trash

# extract the current file with the right command
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czvf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd edit-config ${{
    $EDITOR ~/.config/lf/lfrc
    lf -remote "send $id source ~/.config/lf/lfrc"
}}

map C :edit-config

cmd pager ${{
    if [ -f "$f" ]; then
        $PAGER "$f"
    elif [ -d "$f" ]; then
        tree "$f" | $PAGER
    fi
}}

map i :pager

cmd on-init :{{
    cmd on-redraw %{{
        if [ "$lf_width" -le 60 ]; then
            lf -remote "send $id :set ratios 1:3"
        elif [ "$lf_width" -le 140 ]; then
            lf -remote "send $id :set ratios 2:3"
        else
            lf -remote "send $id :set ratios 1:3:5"
        fi
    }}
    on-redraw
}}

cmd toggle-preview %{{
    if [ "$lf_preview" = true ]; then
        lf -remote "send $id :set preview false"
    else
        lf -remote "send $id :set preview true"
    fi
}}

map zp :toggle-preview

cmd toggle_hex_view &{{
    # reload is used to clear any previews that have been cached
    if [ "$lf_user_hex_view" != true ]; then
        lf -remote "send $id :set user_hex_view true; reload"
    else
        lf -remote "send $id :set user_hex_view false; reload"
    fi
}}



# funktioniert nicht wenn datei mit leerzeichen im namen...
# cmd paste &{{
#     set -- $(cat ~/.local/share/lf/files)
#     mode="$1"
#     shift
#     case "$mode" in
#         copy)
#             rsync -av --progress -- "$@" . |
#             stdbuf -i0 -o0 -e0 tr '\r' '\n' |
#             while IFS= read -r line; do
#                 line="$(printf '%s' "$line" | sed 's/\\/\\\\/g;s/"/\\"/g')"
#                 lf -remote "send $id echo \"$line\""
#             done
#             ;;
#         move)
#             mv -- "$@" .
#             lf -remote "send clear"
#             ;;
#     esac
# }}
#

map zx :toggle_hex_view

map <f-3> $$PAGER "$f"
map <f-4> $$EDITOR "$f"

cmd yank-file &printf '%s' "$f" | xclip -i -selection clipboard
cmd yank-paths &printf '%s' "$fx" | xclip -i -selection clipboard
cmd yank-dirname &printf '%s' "$PWD" | xclip -i -selection clipboard
cmd yank-basename &basename -a -- $fx | head -c-1 | xclip -i -selection clipboard
cmd yank-basename-without-extension &basename -a -- $fx | sed -E 's/\.[^.]+$//' | head -c-1 | xclip -i -selection clipboard

